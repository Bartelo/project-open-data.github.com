/**
 * GitHub Activity Widgets
 * @author Benjamin J. Balter ( http://ben.balter.com )
 * Adapted from: https://github.com/benbalter/github-widgets/blob/master/github-widgets.js
 */var gitHubWidgets={base:"https://api.github.com/",el:document.getElementById("github-widget"),org:null,repo:null,type:null,limit:null,buildUrl:function(){return this.org=this.org||this.el.getAttribute("data-org"),this.repo=this.repo||this.el.getAttribute("data-repo"),this.type=this.type||this.el.getAttribute("data-type"),this.limit=this.limit||this.el.getAttribute("data-limit")||5,this.type=="repos"||this.type=="events"&&!this.repo?url=this.base+"orgs/"+this.org+"/"+this.type:url=this.base+"repos/"+this.org+"/"+this.repo+"/"+this.type,url+="?callback=gitHubWidgets.callback",url},addScript:function(){url=this.buildUrl(),this.type=="events"&&typeof window.githubSentences=="undefined"&&(body=document.getElementsByTagName("body")[0],js=document.createElement("script"),js.src="https://raw.github.com/adamjacobbecker/github-sentences/master/js/github-sentences.js",body.appendChild(js),document.write("<style>.github-sentence-item { padding: 5px 0 5px 55px; position: relative; min-height: 50px;}.github-sentence-item .avatar { position: absolute; left: 0; top: 2px; border: 1px solid #d0d0d0; padding: 2px;}.github-sentence-item .avatar img { width: 40px; height: 40px;} #github-widget { list-style: none; }</style>")),body=document.getElementsByTagName("body")[0],jsonp=document.createElement("script"),jsonp.src=url,body.appendChild(jsonp)},callback:function(e){if(e.meta.status>200)return!1;e.data=e.data.slice(0,this.limit);for(i=0;i<e.data.length;i++)this.type=="commits"?this.renderCommit(e.data[i]):this.type=="repos"?this.renderRepo(e.data[i]):this.type=="events"&&this.renderEvent(e.data[i])},authorUrl:function(e){return e.replace("https://api.github.com/users/","https://github.com/")},repoUrl:function(e){return e.replace("https://api.github.com/repos/","https://github.com/")},renderCommit:function(e){commit_url="http://github.com/"+this.org+"/"+this.repo+"/commits/"+e.sha,committer_url=this.authorUrl(e.committer.url),li=document.createElement("li"),li.innerHTML='<a href="'+commit_url+'">'+e.commit.message+"</a>",li.innerHTML+=' by <a href="'+committer_url+'">'+e.commit.author.name+"</a>",li.innerHTML+=" - "+relativeDate(new Date(e.commit.author.date)),this.el.appendChild(li)},renderRepo:function(e){li=document.createElement("li"),link=e.homepage||e.html_url,li.innerHTML='<a href="'+link+'">'+e.name+"</a>",e.description&&(li.innerHTML+=' &mdash; <span class="desc">'+e.description+"</span>"),this.el.appendChild(li)},renderEvent:function(e){li=document.createElement("li"),li.innerHTML=githubSentences.convert(e),li.innerHTML=li.innerHTML.replace(/<div class=\"timestamp\">([^<]+)<\/div>/gi,function(e,t){return relativeDate(new Date(t))}),li&&this.el.appendChild(li)}};gitHubWidgets.addScript();var relativeDate=function(e){function f(t,n){!n&&(n=(new Date).getTime()),n instanceof Date&&(n=n.getTime()),t instanceof Date&&(t=t.getTime());var r=n-t,i,s,o;for(s=-1,o=a.length;++s<o;){i=a[s];if(r<i[0])return i[2]==e?i[1]:Math.round(r/i[2])+" "+i[1]}}var t=1e3,n=60*t,r=60*n,i=24*r,s=7*i,o=i*365,u=o/12,a=[[.7*n,"just now"],[1.5*n,"a minute ago"],[60*n,"minutes ago",n],[1.5*r,"an hour ago"],[i,"hours ago",r],[2*i,"yesterday"],[7*i,"days ago",i],[1.5*s,"a week ago"],[u,"weeks ago",s],[1.5*u,"a month ago"],[o,"months ago",u],[1.5*o,"a year ago"],[Number.MAX_VALUE,"years ago",o]];return f}();